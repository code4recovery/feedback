// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String    @unique
  slug      String    @unique
  url       String    @unique
  feedUrl   String    @unique
  userIds   String[]  @db.ObjectId
  users     User[]    @relation("AccountUsers", fields: [userIds], references: [id])
  requests  Request[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Change {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  requestId String   @db.ObjectId
  request   Request  @relation(fields: [requestId], references: [id])
  field     String
  before    String
  after     String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Request {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  accountId String   @db.ObjectId
  account   Account  @relation(fields: [accountId], references: [id])
  type      String
  slug      String
  userId    String   @db.ObjectId
  user      User     @relation(fields: [userId], references: [id])
  changes   Change[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  email      String    @unique
  emailHash  String
  lastSeen   DateTime?
  loginToken String
  accountIds String[]  @db.ObjectId
  accounts   Account[] @relation("AccountUsers", fields: [accountIds], references: [id])
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
  requests   Request[]
}
